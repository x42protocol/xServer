version: '3.4'

services:
  x42server:
    build:
      context: .
      dockerfile: xServer.D/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+
      - MONGOCONNECTIONSTRING=mongodb://mongo:mongo@mongo:27017
    ports:
      - "4242:4242" 
    volumes:
      - type: bind
        source: ./xServer.conf
        target: /root/.xserverdata/main/xServer.conf
      - type: bind
        source: ./xServer.D/dapps/
        target: /app/dapps/
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - "mongo"
      - "postgres"
  x42serverworker:
    build:
      context: .
      dockerfile: xServerWorker/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+
      - MONGOCONNECTIONSTRING=mongodb://mongo:mongo@mongo:27017
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
      x42core:
        condition: service_healthy

  x42core:
    image: x42protocoldocker/x42blockcorenode:v1.1.43
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+
    command: --chain=x42 -txindex=1 -addressindex=1
    restart: always
    ports:
      - "0.0.0.0:52342:52342" #Blockcore Port
      - "0.0.0.0:52343:52343" #RPC Port
      - "0.0.0.0:42222:42222" #wsPort
      - "0.0.0.0:42220:42220" #api Port

    volumes:
      - type: bind
        source: ./x42.conf
        target: /root/.blockcore/x42/x42Main/x42.conf
      - xcoredata:/root/.blockcore/x42
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    healthcheck:
      test: "curl -f localhost:42220/ping"
      interval: 5s
      timeout: 5s
      retries: 20

    expose:
      - 42220

  mongo:
    container_name: xDocumentStore
    image: mongo:5.0.9
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - '27017:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  postgres:
      image: postgres:14.2-alpine3.15
      restart: always
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=x42
      ports:
        - '5432:5432'
volumes:
  xcoredata: